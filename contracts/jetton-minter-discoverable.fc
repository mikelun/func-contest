;; Jettons discoverable contract

;; 6905(computational_gas_price) * 1000(cur_gas_price) = 6905000
;; ceil(6905000) = 10000000 ~= 0.01 TON
int provide_address_gas_consumption() asm "10000000 PUSHINT";

(int, slice, cell, cell) load_data() inline {
    slice ds = get_data().begin_parse();

    return (
        ds~load_coins(),
        ds~load_msg_addr(),
        ds~load_ref(),
        ds~load_ref()
    );
}

() save_data(int total_supply, slice admin_address, cell content, cell jetton_wallet_code) impure inline {
    set_data(begin_cell()
        .store_coins(total_supply)
        .store_slice(admin_address)
        .store_ref(content)
        .store_ref(jetton_wallet_code)
        .end_cell()
    );
}

() mint_tokens(slice to_address, cell jetton_wallet_code, int amount, cell master_msg) impure {
    cell state_init = calculate_jetton_state_init(to_address, my_address(), jetton_wallet_code);
   
    slice to_wallet_addresss = calculate_jetton_wallet_address(state_init);
    
    var msg = begin_cell()
        .store_uint(0x18, 6)
        .store_slice(to_wallet_addresss)
        .store_coins(amount)
        .store_uint(4 + 2 + 1, 1 + 4 + 4 + 64 + 32 + 1 + 1 + 1)
        .store_ref(state_init)
        .store_ref(master_msg);

    send_raw_message(msg.end_cell(), 1); ;; pay trasnfer fees separately, revert on errors
}

